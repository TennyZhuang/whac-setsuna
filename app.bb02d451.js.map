{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.bb02d451.js","sourceRoot":"..","sourcesContent":["import setsunaURL from './assets/setsuna1.png';\nimport hammerURL from './assets/hammer.png';\nimport hitURL from './assets/hit.mp3';\n\nfunction toHHMMSS(ms: number) {\n  var sec_num = ms / 1000; // don't forget the second param\n  var hours   = Math.floor(sec_num / 3600);\n  var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n  var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n  return hours+':'+minutes+':'+seconds;\n};\n\n(async function () {\n  const canvas = <HTMLCanvasElement>document.getElementById(\"game\");\n  const scoreboard = <HTMLDivElement>document.getElementById('score');\n  const content = <HTMLDivElement>document.getElementById('content');\n\n  canvas.width = 1000;\n  canvas.height = 600;\n\n  const context = canvas.getContext('2d');\n  const setsuna = new Image();\n  setsuna.src = setsunaURL;\n  const hammer = new Image();\n  hammer.src = hammerURL;\n  const hit = <HTMLAudioElement>document.getElementById('hit');\n\n  context.font = '50px Georgia';\n  context.textAlign = 'center';\n  context.fillStyle = \"white\";\n  context.fillText('雪菜没了！就救雪菜', 500, 300);\n  context.fillText('敲击空格开始游戏', 500, 400);\n\n  await Promise.all([\n    new Promise((resolve, reject) => {\n      setsuna.onload = resolve;\n      setsuna.onerror = reject;\n    }),\n    new Promise((resolve, reject) => {\n      hammer.onload = resolve;\n      hammer.onerror = reject;\n    }),\n    new Promise((resolve, _) => {\n      window.onkeypress = (ev: KeyboardEvent) => {\n        if (ev.code == \"Space\") {\n          resolve();\n        }\n      }\n    }),\n  ]);\n\n  const start = new Date().getTime();\n\n  const sleep = (ms: number) => new Promise((resolve, _) => {\n    setTimeout(resolve, ms);\n  });\n\n  let progress = 0;\n  let step = 0.02;\n  let beating = false;\n  let hammerX = 0;\n  let hammerY = 0;\n  let existing = false;\n  let posX = 0;\n  let posY = 0;\n\n  canvas.onmousedown = (ev) => {\n    hammerX = ev.offsetX;\n    hammerY = ev.offsetY;\n    beating = true;\n  }\n  let score = 0;\n\n  async function draw() {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    if (existing) {\n      context.drawImage(setsuna, 0, setsuna.height*(1-progress), setsuna.width, setsuna.height, posX, posY+setsuna.height*(1-progress), setsuna.width, setsuna.height);\n    }\n    if (beating) {\n      context.drawImage(hammer, hammerX-50, hammerY-50, 100, 100);\n    }\n  }\n\n  async function drawLoop() {\n    while (true) {\n      await sleep(20);\n      draw();\n    }\n  }\n\n  let level = 1;\n  async function roundLoop() {\n    while (true) {\n      let baseStep = [level * 0.01, level * 0.03];\n      await sleep(Math.random()*80+100);\n      posX = Math.random() * 300 + 350;\n      posY = Math.random() * 200 + 150;\n      step = baseStep[0] + Math.random() * baseStep[1];\n      await round();\n      const duration = new Date().getTime() - start;\n      if (score >= level * 10) {\n        alert(`关卡：${level} -> ${level + 1}\\n耗时：${toHHMMSS(duration)}`)\n        level++;\n      }\n      scoreboard.innerText = `第${level}关 总分：${score}`;\n    }\n  }\n\n  function intersect(x: number, y: number) {\n    return posX <= x && x <= posX + setsuna.width && posY <= y && y <= posY + setsuna.height;\n  }\n\n  async function round() {\n    progress = 0;\n    existing = true;\n    const wait = (ms: number) => new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n      canvas.onmouseup = (ev) => {\n        hit.play();\n        beating = false;\n        if (!intersect(ev.offsetX, ev.offsetY)) {\n          return;\n        }\n        reject();\n      };\n    });\n\n    try {\n      while (progress < 1) {\n        progress += step;\n        await wait(20);\n      }\n      await wait(Math.random()*200+100);\n      while (progress > 0) {\n        progress -= 0.1;\n        await wait(20);\n      }\n      progress = 0;\n      content.innerText = '让雪菜逃走了！'\n    } catch {\n      score += 1;\n      content.innerText = '击中雪菜了！'\n      while (progress > 0) {\n        progress -= 0.1;\n        await sleep(20);\n      }\n      progress = 0;\n      existing = true;      \n    } finally {\n      existing = false;\n    }\n  }\n\n  Promise.all([drawLoop(), roundLoop()]).then(() => {\n    console.log(\"game exit.\");\n  });\n})();\n"]}